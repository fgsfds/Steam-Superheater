<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:pages="clr-namespace:Avalonia.Desktop.Pages"
        xmlns:controls="clr-namespace:Avalonia.Desktop.UserControls"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        xmlns:vm="clr-namespace:Avalonia.Desktop.ViewModels"
        xmlns:vmp="clr-namespace:Avalonia.Desktop.ViewModels.Popups"
        xmlns:cp="clr-namespace:Common.Client;assembly=Superheater.Common.Client"
        xmlns:helpers="clr-namespace:Avalonia.Desktop.Helpers"
        x:DataType="vm:MainWindowViewModel"
        x:Class="Avalonia.Desktop.Windows.MainWindow"
        Icon="/Assets/icon.ico"
        Title="Steam Superheater"
        MinHeight="600"
        Height="800"
        MinWidth="1000"
        Width="1200"
        WindowStartupLocation="CenterScreen"
        CanResize="True"
        ExtendClientAreaToDecorationsHint="True"
        Background="{DynamicResource Background}"
        WindowState="Maximized">

    <Window.Resources>
        <ResourceDictionary>

            <helpers:ReverseBoolConverter x:Key="ReverseBoolConverter"/>

            <ResourceDictionary.MergedDictionaries>
                <ResourceInclude Source='/Styles/ThemedResources.axaml'/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Border BorderThickness="1"
            BorderBrush="{DynamicResource WindowBorder}"
            IsHitTestVisible="True">

        <Grid RowDefinitions="25,*,25">

            <TextBlock Margin="10,5,0,0"
                       Foreground="{DynamicResource SystemAccentColor}"
                       IsVisible="{Binding Source={x:Static cp:ClientProperties.IsDeveloperMode}}"
                       Text="{Binding RepositoryMessage}"/>

            <TabControl Grid.Row="1" Grid.RowSpan="2" Margin="5" Name="Tabs">
                <TabItem Name="MainTab" Header="{Binding ElementName=MainPageTab, Path=((vm:MainViewModel)DataContext).MainTabHeader}" Margin="10,0,10,10">
                    <pages:MainPage Margin="0" x:Name="MainPageTab" />
                </TabItem>
                <TabItem Header="Sources"
                         Margin="0,0,10,10">
                    <pages:SourcesPage Margin="0" x:Name="SourcesPageTab" />
                </TabItem>
                <TabItem Header="Editor"
                         IsVisible="{Binding Source={x:Static cp:ClientProperties.IsInSteamDeckGameMode}, Converter={StaticResource ReverseBoolConverter}}"
                         Margin="0,0,10,10">
                    <pages:EditorPage Margin="0" x:Name="EditorPageTab" />
                </TabItem>
                <TabItem Header="{Binding ElementName=NewsPageTab, Path=((vm:NewsViewModel)DataContext).NewsTabHeader}" Margin="0,0,10,10">
                    <pages:NewsPage Margin="0" x:Name="NewsPageTab" />
                </TabItem>
                <TabItem Header="Settings" Margin="0,0,10,10">
                    <pages:SettingsPage Margin="0" x:Name="SettingsPageTab"/>
                </TabItem>
                <TabItem Header="{Binding ElementName=AboutPageTab, Path=((vm:AboutViewModel)DataContext).AboutTabHeader}" Margin="0,0,0,10">
                    <pages:AboutPage Margin="0" x:Name="AboutPageTab"/>
                </TabItem>
            </TabControl>

            <Grid Margin="30" RowDefinitions="10,*,10" Grid.Row="1" >

                <controls:PopupMessage
                    VerticalAlignment="Center"
                    Grid.Row="1"
                    x:Name="PopupMessage"
                    IsVisible="{Binding ElementName=PopupMessage, Path=((vmp:IPopup)DataContext).IsVisible, FallbackValue='False'}"/>

                <controls:PopupEditor
                    VerticalAlignment="Center"
                    Grid.Row="1"
                    x:Name="PopupEditor"
                    IsVisible="{Binding ElementName=PopupEditor, Path=((vmp:IPopup)DataContext).IsVisible, FallbackValue='False'}"/>

                <controls:PopupStack
                    VerticalAlignment="Center"
                    Grid.Row="1"
                    x:Name="PopupStack"
                    IsVisible="{Binding ElementName=PopupStack, Path=((vmp:IPopup)DataContext).IsVisible, FallbackValue='False'}"/>

            </Grid>
        </Grid>

    </Border>

</Window>
